{"ast":null,"code":"var _jsxFileName = \"/home/interedes/Documentos/react fernando/primera seccion react/gif-expert/src/components/GifGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const GifGrid = _ref => {\n  _s();\n\n  let {\n    category\n  } = _ref;\n  // const [count, setCount] = useState(0)\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getGifs();\n  }, []);\n\n  const getGifs = async () => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=EbA0GSgcDQI2e9HHhzTQswtFHhlU8UW4&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const {\n      data\n    } = await resp.json();\n    console.log(data);\n    const gifs = data.map(img => {\n      var _img$images;\n\n      return {\n        id: img.id,\n        title: img.title,\n        url: (_img$images = img.images) === null || _img$images === void 0 ? void 0 : _img$images.downsized_medium.url\n      };\n    });\n    console.log(gifs);\n    setImages(gifs);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: images.map(img => /*#__PURE__*/_jsxDEV(GifGridItem, { ...img\n      }, img.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(GifGrid, \"ScKwoilS3xNJP1q5r1COmrAdDIM=\");\n\n_c = GifGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"GifGrid\");","map":{"version":3,"sources":["/home/interedes/Documentos/react fernando/primera seccion react/gif-expert/src/components/GifGrid.js"],"names":["React","useState","useEffect","GifGridItem","GifGrid","category","images","setImages","getGifs","url","encodeURI","resp","fetch","data","json","console","log","gifs","map","img","id","title","downsized_medium"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,eAA5B;;;AAEA,OAAO,MAAMC,OAAO,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACvC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,OAAO,GAAG,YAAY;AAC1B,UAAMC,GAAG,GACN,mFAAkFC,SAAS,CAACL,QAAD,CAAW,WADzG;AAEA,UAAMM,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAxB;AACA,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMF,IAAI,CAACG,IAAL,EAAvB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAMI,IAAI,GAAGJ,IAAI,CAACK,GAAL,CAAUC,GAAD,IAAS;AAAA;;AAC7B,aAAO;AACLC,QAAAA,EAAE,EAAED,GAAG,CAACC,EADH;AAELC,QAAAA,KAAK,EAAEF,GAAG,CAACE,KAFN;AAGLZ,QAAAA,GAAG,iBAAEU,GAAG,CAACb,MAAN,gDAAE,YAAYgB,gBAAZ,CAA6Bb;AAH7B,OAAP;AAKD,KANY,CAAb;AAOAM,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACAV,IAAAA,SAAS,CAACU,IAAD,CAAT;AACD,GAfD;;AAgBA,sBACE;AAAA,4BACE;AAAA,gBAAKZ;AAAL;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBACGC,MAAM,CAACY,GAAP,CAAYC,GAAD,iBACV,QAAC,WAAD,OAA8BA;AAA9B,SAAkBA,GAAG,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAUD,CAhCM;;GAAMhB,O;;KAAAA,O","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { GifGridItem } from \"./GifGridItem\";\n\nexport const GifGrid = ({ category }) => {\n  // const [count, setCount] = useState(0)\n  const [images, setImages] = useState([]);\n  useEffect(() => {\n    getGifs();\n  }, []);\n  const getGifs = async () => {\n    const url =\n      `https://api.giphy.com/v1/gifs/search?api_key=EbA0GSgcDQI2e9HHhzTQswtFHhlU8UW4&q=${encodeURI(category)}&limit=10`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    console.log(data);\n    const gifs = data.map((img) => {\n      return {\n        id: img.id,\n        title: img.title,\n        url: img.images?.downsized_medium.url,\n      };\n    });\n    console.log(gifs);\n    setImages(gifs);\n  };\n  return (\n    <>\n      <h3>{category}</h3>\n      <div className=\"card-grid\">\n        {images.map((img) => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}